import tkinter as tk
from tkinter import messagebox, ttk
import boto3
import threading
import time

# AWS CodePipeline のクライアントを作成
client = boto3.client('codepipeline')

# パイプラインの名前を設定（実際の環境に合わせて変更）
pipelines = ["Pipeline1", "Pipeline2", "Pipeline3"]

def start_all_pipelines():
    try:
        for pipeline in pipelines:
            client.start_pipeline_execution(name=pipeline)
        messagebox.showinfo("Success", "All pipelines started successfully!")
    except Exception as e:
        messagebox.showerror("Error", str(e))

def refresh_pipeline_status(app, pipeline_status, approve_buttons):
    while True:
        try:
            for pipeline in pipelines:
                response = client.get_pipeline_state(name=pipeline)
                latest_state = response['stageStates'][0]['latestExecution']['status']
                pipeline_status[pipeline].set(latest_state)

                # 承認アクションが必要かチェック
                for action_state in response['stageStates']:
                    if action_state.get('latestExecution', {}).get('status') == 'WaitingForApproval':
                        approve_buttons[pipeline].config(state=tk.NORMAL, bg='green')
                    else:
                        approve_buttons[pipeline].config(state=tk.DISABLED, bg='grey')
            time.sleep(10)
        except Exception as e:
            messagebox.showerror("Error", str(e))
        time.sleep(10)

def approve_action(pipeline):
    # 承認処理をここに実装
    messagebox.showinfo("Approved", f"Pipeline {pipeline} approved!")

def create_app():
    app = tk.Tk()
    app.title("AWS CodePipeline Controller")

    pipeline_status = {pipeline: tk.StringVar(value="Unknown") for pipeline in pipelines}
    approve_buttons = {}

    ttk.Button(app, text="Start All Pipelines", command=start_all_pipelines).grid(row=0, column=0, columnspan=3, pady=10)

    row = 1
    for pipeline in pipelines:
        ttk.Label(app, text=pipeline).grid(row=row, column=0, padx=5, pady=5)
        status_label = ttk.Label(app, textvariable=pipeline_status[pipeline])
        status_label.grid(row=row, column=1, padx=5, pady=5)

        approve_button = ttk.Button(app, text=f"Approve {pipeline}", command=lambda p=pipeline: approve_action(p), state=tk.DISABLED)
        approve_button.grid(row=row, column=2, padx=5, pady=5)
        approve_buttons[pipeline] = approve_button

        row += 1

    # ステータス更新スレッドの開始
    threading.Thread(target=refresh_pipeline_status, args=(app, pipeline_status, approve_buttons), daemon=True).start()

    return app

if __name__ == "__main__":
    app = create_app()
    app.mainloop()
