import time
import boto3

def lambda_handler(event, context):
    try:
        # AWS認証情報はLambda関数のIAMロールから取得されます
        rds_client = boto3.client('rds')

        # スナップショットの識別子とクラスター識別子を設定
        snapshot_identifier = 'test-snapshot'  # スナップショットの識別子
        cluster_identifier = 'test-cluster'    # DBクラスターの識別子

        # 既存のスナップショットを確認
        snapshots = rds_client.describe_db_cluster_snapshots(DBClusterIdentifier=cluster_identifier)
        snapshot_exists = False

        for snapshot in snapshots['DBClusterSnapshots']:
            if snapshot['DBClusterSnapshotIdentifier'] == snapshot_identifier:
                snapshot_exists = True
                break

        # スナップショットが存在する場合、削除
        if snapshot_exists:
            rds_client.delete_db_cluster_snapshot(DBClusterSnapshotIdentifier=snapshot_identifier)

            # 削除が完了するまで待機
            while True:
                snapshot = rds_client.describe_db_cluster_snapshots(DBClusterSnapshotIdentifier=snapshot_identifier)
                if len(snapshot['DBClusterSnapshots']) == 0:
                    break
                time.sleep(30)

        # 新しいスナップショットを作成
        rds_client.create_db_cluster_snapshot(DBClusterSnapshotIdentifier=snapshot_identifier, DBClusterIdentifier=cluster_identifier)

        # スナップショットが利用可能になるのを待つ
        while True:
            snapshot = rds_client.describe_db_cluster_snapshots(DBClusterSnapshotIdentifier=snapshot_identifier)
            if len(snapshot['DBClusterSnapshots']) > 0:
                snapshot_status = snapshot['DBClusterSnapshots'][0]['Status']
                if snapshot_status == 'available':
                    break
            time.sleep(30)

        print(f"スナップショット '{snapshot_identifier}' が利用可能になりました")
    except Exception as e:
        return {
            'statusCode': 500
        }
