{
  "Comment": "RDS Cluster Maintenance Workflow",
  "StartAt": "StopRDSCluster",
  "States": {
    "StopRDSCluster": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:StopRDSClusterLambda",
      "Next": "CheckDBStatus",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "FailState"
        }
      ]
    },
    "CheckDBStatus": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:CheckDBStatusLambda",
      "Retry": [
        {
          "ErrorEquals": ["DBClusterStatusNotAvailable"],
          "MaxAttempts": 5,
          "IntervalSeconds": 60
        }
      ],
      "Next": "RestoreDBSnapshot",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "FailState"
        }
      ]
    },
    "RestoreDBSnapshot": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:RestoreDBSnapshotLambda",
      "Next": "CheckRestoredDBStatus",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "FailState"
        }
      ]
    },
    "CheckRestoredDBStatus": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:CheckRestoredDBStatusLambda",
      "Retry": [
        {
          "ErrorEquals": ["DBInstanceStatusNotAvailable"],
          "MaxAttempts": 5,
          "IntervalSeconds": 60
        }
      ],
      "Next": "DeleteDBAndSnapshot",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "FailState"
        }
      ]
    },
    "DeleteDBAndSnapshot": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:DeleteDBAndSnapshotLambda",
      "Next": "UpdateRoute53Record",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "FailState"
        }
      ]
    },
    "UpdateRoute53Record": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:UpdateRoute53RecordLambda",
      "Next": "CreateDBLink",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "FailState"
        }
      ]
    },
    "CreateDBLink": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:CreateDBLinkLambda",
      "End": true,
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "FailState"
        }
      ]
    },
    "FailState": {
      "Type": "Fail"
    }
  }
}
