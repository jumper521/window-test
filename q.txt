import boto3

def lambda_handler(event, context):
    # CloudWatch Logs ロググループ名とサブスクリプションフィルタ名を指定
    log_group_name = 'YOUR_LOG_GROUP_NAME'
    filter_name = 'YOUR_FILTER_NAME'

    # CloudWatch Logs クライアントを作成
    logs_client = boto3.client('logs')

    try:
        # サブスクリプションフィルタを削除
        logs_client.delete_subscription_filter(
            logGroupName=log_group_name,
            filterName=filter_name
        )
        
        return {
            'statusCode': 200,
            'body': f'Subscription filter {filter_name} in log group {log_group_name} deleted successfully.'
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': f'Error: {str(e)}'
        }


import boto3

def lambda_handler(event, context):
    # CloudWatch Logs ロググループ名を指定
    log_group_name = 'YOUR_LOG_GROUP_NAME'

    # SNS トピックの ARN を指定
    sns_topic_arn = 'YOUR_SNS_TOPIC_ARN'

    # CloudWatch Logs クライアントを作成
    logs_client = boto3.client('logs')

    try:
        # サブスクリプションフィルタを作成
        logs_client.put_subscription_filter(
            logGroupName=log_group_name,
            filterName='MyFilter',  # フィルタ名を指定
            filterPattern='',  # フィルタパターンを指定
            destinationArn=sns_topic_arn  # SNS トピックの ARN を指定
        )

        return {
            'statusCode': 200,
            'body': 'Subscription filter created successfully.'
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': f'Error: {str(e)}'
        }
